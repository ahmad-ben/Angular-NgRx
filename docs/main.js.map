{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/action-types.ts","./src/app/auth/auth.actions.ts","./src/app/auth/auth.effects.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.selectors.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/reducers/index.ts","./src/app/reducers/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {Observable} from 'rxjs';\r\nimport {distinctUntilChanged, map} from 'rxjs/operators';\r\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\r\nimport {AppState} from './reducers';\r\nimport {isLoggedIn, isLoggedOut} from './auth/auth.selectors';\r\nimport {login, logout} from './auth/auth.actions';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    loading = true;\r\n\r\n    isLoggedIn$: Observable<boolean>;\r\n\r\n    isLoggedOut$: Observable<boolean>;\r\n\r\n    constructor(private router: Router,\r\n                private store: Store<AppState>) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        const userProfile = localStorage.getItem(\"user\");\r\n\r\n        if (userProfile) {\r\n            this.store.dispatch(login({user: JSON.parse(userProfile)}));\r\n        }\r\n\r\n        this.router.events.subscribe(event => {\r\n            switch (true) {\r\n                case event instanceof NavigationStart: {\r\n                    this.loading = true;\r\n                    break;\r\n                }\r\n\r\n                case event instanceof NavigationEnd:\r\n                case event instanceof NavigationCancel:\r\n                case event instanceof NavigationError: {\r\n                    this.loading = false;\r\n                    break;\r\n                }\r\n                default: {\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.isLoggedIn$ = this.store\r\n            .pipe(\r\n                select(isLoggedIn)\r\n            );\r\n\r\n        this.isLoggedOut$ = this.store\r\n            .pipe(\r\n                select(isLoggedOut)\r\n            );\r\n\r\n    }\r\n\r\n    logout() {\r\n\r\n        this.store.dispatch(logout());\r\n\r\n    }\r\n\r\n}\r\n","<mat-sidenav-container fullscreen>\r\n\r\n    <mat-sidenav #start>\r\n        <mat-nav-list (click)=\"start.close()\">\r\n\r\n            <a mat-list-item routerLink=\"/courses\">\r\n                <mat-icon>library_books</mat-icon>\r\n                <span>Courses</span>\r\n            </a>\r\n\r\n            <a mat-list-item routerLink=\"/login\" *ngIf=\"isLoggedOut$ | async\">\r\n                <mat-icon>account_circle</mat-icon>\r\n                <span>Login</span>\r\n            </a>\r\n\r\n            <a mat-list-item  (click)=\"logout()\" *ngIf=\"isLoggedIn$ | async\">\r\n                <mat-icon>exit_to_app</mat-icon>\r\n                <span>Logout</span>\r\n            </a>\r\n\r\n        </mat-nav-list>\r\n\r\n    </mat-sidenav>\r\n\r\n    <mat-toolbar color=\"primary\">\r\n        <button class=\"menu-button\" mat-icon-button (click)=\"start.open('mouse')\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n\r\n  <div class=\"spinner-container\" *ngIf=\"loading\">\r\n\r\n    <mat-spinner></mat-spinner>\r\n\r\n  </div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { metaReducers, reducers } from './reducers';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'courses',\r\n        loadChildren: () => import('./courses/courses.module').then(m => m.CoursesModule),\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '/'\r\n    }\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        RouterModule.forRoot(routes),\r\n        HttpClientModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatSidenavModule,\r\n        MatProgressSpinnerModule,\r\n        MatListModule,\r\n        MatToolbarModule,\r\n        AuthModule.forRoot(),\r\n        StoreModule.forRoot(reducers, {\r\n            metaReducers,\r\n            runtimeChecks : {\r\n                strictStateImmutability: true,\r\n                strictActionImmutability: true,\r\n                strictActionSerializability: true,\r\n                strictStateSerializability:true\r\n            }\r\n        }),\r\n        StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\r\n        EffectsModule.forRoot([]),\r\n        StoreRouterConnectingModule.forRoot({\r\n            stateKey: 'router',\r\n            routerState: RouterState.Minimal\r\n        }),\r\n        EntityDataModule.forRoot({})\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","\r\n\r\nimport * as AuthActions from './auth.actions';\r\n\r\nexport {AuthActions};\r\n","import {createAction, props} from '@ngrx/store';\r\nimport {User} from './model/user.model';\r\n\r\n\r\nexport const login = createAction(\r\n    \"[Login Page] User Login\",\r\n    props<{user: User}>()\r\n);\r\n\r\n\r\n\r\nexport const logout = createAction(\r\n  \"[Top Menu] Logout\"\r\n);\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {AuthActions} from './action-types';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n\r\n    login$ = createEffect(() =>\r\n        this.actions$\r\n            .pipe(\r\n                ofType(AuthActions.login),\r\n                tap(action => localStorage.setItem('user',\r\n                        JSON.stringify(action.user))\r\n                )\r\n            )\r\n    ,\r\n    {dispatch: false});\r\n\r\n    logout$ = createEffect(() =>\r\n        this.actions$\r\n            .pipe(\r\n                ofType(AuthActions.logout),\r\n                tap(action => {\r\n                    localStorage.removeItem('user');\r\n                    this.router.navigateByUrl('/login');\r\n                })\r\n            )\r\n    , {dispatch: false});\r\n\r\n\r\n    constructor(private actions$: Actions,\r\n                private router: Router) {\r\n\r\n    }\r\n\r\n}\r\n","import {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppState} from '../reducers';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {isLoggedIn} from './auth.selectors';\r\nimport {tap} from 'rxjs/operators';\r\nimport {login, logout} from './auth.actions';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private store: Store<AppState>,\r\n        private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean> {\r\n\r\n        return this.store\r\n            .pipe(\r\n                select(isLoggedIn),\r\n                tap(loggedIn => {\r\n                    if (!loggedIn) {\r\n                        this.router.navigateByUrl('/login');\r\n                    }\r\n                })\r\n            )\r\n\r\n\r\n    }\r\n\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport { StoreModule } from '@ngrx/store';\r\nimport {AuthService} from \"./auth.service\";\r\nimport * as fromAuth from './reducers';\r\nimport {authReducer} from './reducers';\r\nimport {AuthGuard} from './auth.guard';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {AuthEffects} from './auth.effects';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        RouterModule.forChild([{path: '', component: LoginComponent}]),\r\n        StoreModule.forFeature('auth', authReducer),\r\n        EffectsModule.forFeature([AuthEffects])\r\n    ],\r\n    declarations: [LoginComponent],\r\n    exports: [LoginComponent]\r\n})\r\nexport class AuthModule {\r\n    static forRoot(): ModuleWithProviders<AuthModule> {\r\n        return {\r\n            ngModule: AuthModule,\r\n            providers: [\r\n              AuthService,\r\n                AuthGuard\r\n            ]\r\n        }\r\n    }\r\n}\r\n","import {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {AuthState} from './reducers';\r\n\r\n\r\nexport const selectAuthState =\r\n    createFeatureSelector<AuthState>(\"auth\");\r\n\r\n\r\nexport const isLoggedIn = createSelector(\r\n    selectAuthState,\r\n    auth =>  !!auth.user\r\n\r\n);\r\n\r\n\r\nexport const isLoggedOut = createSelector(\r\n    isLoggedIn,\r\n    loggedIn => !loggedIn\r\n);\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"./model/user.model\";\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(private http:HttpClient) {\r\n\r\n    }\r\n\r\n    login(email:string, password:string): Observable<User> {\r\n        return this.http.post<User>('/api/login', {email,password});\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { Store } from \"@ngrx/store\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { noop } from 'rxjs';\r\nimport { tap } from \"rxjs/operators\";\r\nimport { AppState } from '../../reducers';\r\nimport { login } from '../auth.actions';\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  constructor(\r\n      private fb:FormBuilder,\r\n      private auth: AuthService,\r\n      private router:Router,\r\n      private store: Store<AppState>) {\r\n      this.form = fb.group({\r\n          email: ['test@angular-university.io', [Validators.required]],\r\n          password: ['test', [Validators.required]]\r\n      });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  login() {\r\n      const val = this.form.value;\r\n      this.auth.login(val.email, val.password)\r\n          .pipe(\r\n              tap(user => {\r\n                  // console.log(user);\r\n                  this.store.dispatch(login({user}));\r\n                  this.router.navigateByUrl('/courses');\r\n              })\r\n          )\r\n          .subscribe(\r\n              noop,\r\n              () => alert('Login Failed')\r\n          );\r\n  }\r\n}\r\n\r\n","<mat-card class=\"login-page\">\r\n    <mat-card-title>Login</mat-card-title>\r\n    <mat-card-content>\r\n        <form [formGroup]=\"form\" class=\"login-form\">\r\n\r\n            <mat-form-field>\r\n\r\n                <input matInput type=\"email\"\r\n                       placeholder=\"Email\"\r\n                       formControlName=\"email\">\r\n\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n\r\n                <input matInput type=\"password\"\r\n                       placeholder=\"Password\"\r\n                       formControlName=\"password\">\r\n\r\n            </mat-form-field>\r\n\r\n            <button mat-raised-button color=\"primary\"\r\n                    (click)=\"login()\"\r\n                    [disabled]=\"!form.valid\">Login</button>\r\n\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import {\r\n    ActionReducer,\r\n    ActionReducerMap,\r\n    createFeatureSelector, createReducer,\r\n    createSelector,\r\n    MetaReducer, on\r\n} from '@ngrx/store';\r\nimport {User} from '../model/user.model';\r\nimport {AuthActions} from '../action-types';\r\n\r\n\r\n\r\nexport interface AuthState {\r\n    user: User\r\n}\r\n\r\nexport const initialAuthState: AuthState = {\r\n    user: undefined\r\n};\r\n\r\nexport const authReducer = createReducer(\r\n\r\n    initialAuthState,\r\n\r\n    on(AuthActions.login, (state, action) => {\r\n        return {\r\n            user: action.user\r\n        }\r\n    }),\r\n\r\n    on(AuthActions.logout, (state, action) => {\r\n        return {\r\n            user: undefined\r\n        }\r\n    })\r\n\r\n\r\n\r\n);\r\n\r\n","import { routerReducer } from '@ngrx/router-store';\r\nimport {\r\n  ActionReducer,\r\n  ActionReducerMap, MetaReducer\r\n} from '@ngrx/store';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface AppState {\r\n\r\n}\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {router: routerReducer};\r\n\r\nexport function logger(reducer:ActionReducer<any>)\r\n  : ActionReducer<any> {\r\n  return (state, action) => {\r\n    // console.log(\"state before: \", state);\r\n    // console.log(\"action\", action);\r\n    return reducer(state, action);\r\n  }\r\n}\r\n\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] =\r\n  !environment.production ? [logger] : [];\r\n\r\n\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"names":["select","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","isLoggedIn","isLoggedOut","login","logout","i0","AppComponent","constructor","router","store","ngOnInit","userProfile","localStorage","getItem","dispatch","user","JSON","parse","events","subscribe","event","loading","isLoggedIn$","pipe","isLoggedOut$","selectors","decls","vars","consts","template","BrowserModule","MatIconModule","MatMenuModule","BrowserAnimationsModule","HttpClientModule","MatListModule","MatSidenavModule","MatToolbarModule","RouterModule","StoreRouterConnectingModule","StoreModule","StoreDevtoolsModule","environment","AuthModule","MatProgressSpinnerModule","EntityDataModule","EffectsModule","AuthGuard","metaReducers","reducers","routes","path","loadChildren","then","m","CoursesModule","canActivate","redirectTo","AppModule","bootstrap","forRoot","runtimeChecks","strictStateImmutability","strictActionImmutability","strictActionSerializability","strictStateSerializability","instrument","maxAge","logOnly","production","stateKey","routerState","declarations","imports","AuthActions","createAction","props","createEffect","ofType","tap","AuthEffects","actions$","action","setItem","stringify","removeItem","navigateByUrl","factory","route","state","loggedIn","CommonModule","LoginComponent","MatCardModule","MatInputModule","ReactiveFormsModule","MatButtonModule","AuthService","authReducer","ngModule","providers","forChild","component","forFeature","exports","createFeatureSelector","createSelector","selectAuthState","auth","http","email","password","post","Validators","noop","fb","form","group","required","val","value","alert","ctx","createReducer","on","initialAuthState","undefined","routerReducer","logger","reducer","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","log"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}